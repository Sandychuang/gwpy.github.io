.. _example-table-rate:

.. sectionauthor:: Duncan Macleod <duncan.macleod@ligo.org>

.. currentmodule:: gwpy.table

Calculating (and plotting) rate versus time for an `EventTable`
###############################################################

I would like to study the rate at which event triggers are generated by the
`ExcessPower` gravitational-wave burst detection algorithm, over a small
stretch of data.

The data from which these events were generated are a simulation of Gaussian noise
with the Advanced LIGO design spectrum, and so don't actually contain any real
gravitational waves, but will help tune the algorithm to improve detection of
future, real signals.


First, we import the `EventTable` object and read in a set of events from
a LIGO_LW-format XML file containing a
:class:`sngl_burst <glue.ligolw.lsctables.SnglBurstTable>` table

.. plot::
   :nofigs:
   :include-source:
   :context: reset

   from gwpy.table import EventTable
   events = EventTable.read('H1-LDAS_STRAIN-968654552-10.xml.gz',
                            format='ligolw.sngl_burst', columns=['time', 'snr'])

.. note::

   Here we manually specify the `columns` to read in order to optimise
   the `read()` operation to parse only the data we actually need.

We can calculate the rate of events (in Hertz) using the
:meth:`~EventTable.event_rate` method:

.. plot::
   :nofigs:
   :include-source:
   :context:

   rate = events.event_rate(1, start=968654552, end=968654562)

The :meth:`~EventTable.event_rate` method has returned a
`~gwpy.timeseries.TimeSeries`, so we can display this using the
:meth:`~gwpy.timeseries.TimeSeries.plot` method of that object:

.. plot::
   :include-source:
   :context:

   plot = rate.plot()
   plot.set_xlim(968654552, 968654562)
   plot.set_ylabel('Event rate [Hz]')
   plot.set_title('LIGO Hanford Observatory event rate for GW100916')
   plot.show()
